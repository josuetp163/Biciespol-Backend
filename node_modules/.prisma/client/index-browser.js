
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.14.0
 * Query Engine version: 5d491261d382a2a5ffdc71de17072b0e409f1cc1
 */
Prisma.prismaVersion = {
  client: "2.14.0",
  engine: "5d491261d382a2a5ffdc71de17072b0e409f1cc1"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.UsuarioScalarFieldEnum = makeEnum({
  idUsuario: 'idUsuario',
  usuario: 'usuario',
  pass: 'pass',
  matricula: 'matricula'
});

exports.Prisma.EstacionScalarFieldEnum = makeEnum({
  idEstacion: 'idEstacion',
  nombre: 'nombre'
});

exports.Prisma.BicicletaScalarFieldEnum = makeEnum({
  idBicicleta: 'idBicicleta',
  estado: 'estado',
  estacion: 'estacion'
});

exports.Prisma.AlquilerScalarFieldEnum = makeEnum({
  idAlquiler: 'idAlquiler',
  usuario: 'usuario',
  bicicleta: 'bicicleta',
  fecha: 'fecha',
  estado: 'estado'
});

exports.Prisma.ReportarScalarFieldEnum = makeEnum({
  idReportar: 'idReportar',
  usuario: 'usuario',
  bicicleta: 'bicicleta',
  contenido: 'contenido',
  fecha: 'fecha',
  estado: 'estado'
});

exports.Prisma.ForoScalarFieldEnum = makeEnum({
  idForo: 'idForo',
  descripcion: 'descripcion'
});

exports.Prisma.InformacionScalarFieldEnum = makeEnum({
  idInformacion: 'idInformacion',
  titulo: 'titulo',
  contenido: 'contenido',
  foro: 'foro'
});

exports.Prisma.PublicacionScalarFieldEnum = makeEnum({
  idPublicacion: 'idPublicacion',
  fecha: 'fecha',
  contenido: 'contenido',
  foro: 'foro',
  usuario: 'usuario'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  Usuario: 'Usuario',
  Estacion: 'Estacion',
  Bicicleta: 'Bicicleta',
  Alquiler: 'Alquiler',
  Reportar: 'Reportar',
  Foro: 'Foro',
  Informacion: 'Informacion',
  Publicacion: 'Publicacion'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma-client-js/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
